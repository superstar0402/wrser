name: Provwasm Smart Contract Binary Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"     # Push events to matching v*, i.e. v1.0, v20.15.10
      - "v[0-9]+.[0-9]+.[0-9]+-rc*" # Push events to matching v*, i.e. v1.0-rc1, v20.15.10-rc5

jobs:
  #  This action cleans up previously running instances of a workflow on the same branch. This accomplishes
  #  the task of automatically cancelling CI runs on pushes to the same branch, which is a common feature in
  #  most CI systems but currently not possible with GitHub actions.
  cleanup_runs:
    runs-on: ubuntu-latest
    name: Cleanup Workflows
    steps:
      - uses: rokroskar/workflow-run-cleanup-action@v0.3.3
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    if: "!startsWith(github.ref, 'refs/tags/') && github.ref != 'refs/heads/main'"

  build_init:
    runs-on: ubuntu-latest
    name: Build Init
    steps:
      - id: version
        run: echo "::set-output name=version::${GITHUB_REF##*/}"
    outputs:
      version: ${{ steps.version.outputs.version }}
      go_version: "1.17"

  build_wasm:
    runs-on: ubuntu-latest
    needs:
      - build_init
    name: Build Wasm
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v2.1.5
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      - name: Install deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libleveldb-dev
      - name: Add wasm32 target
        run: |
          rustup target add wasm32-unknown-unknown
      - name: Docker setup
        uses: docker://cosmwasm/rust-optimizer:0.11.3
      - name: Build wasm binary
        run: |
          make tutorial
      - name: Fix zip structure for cosmovisor
        run: |
          make build-release-zip
      - uses: actions/upload-artifact@v2
        with:
          name: zip
          path: contracts/tutorial/artifacts/*.zip

  create_release:
    runs-on: ubuntu-latest
    needs:
      - build_init
      - build_wasm
    name: Create Release
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Create release ${{ needs.build_init.outputs.version }}
        uses: actions/create-release@v1
        id: create_release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          body_path: RELEASE_CHANGELOG.md
    outputs:
      release_url: ${{ steps.create_release.outputs.upload_url }}

  update_release:
    runs-on: ubuntu-latest
    needs:
      - build_init
      - create_release
    name: Attach Release Artifacts
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Setup go
        uses: actions/setup-go@v2.1.5
        with:
          go-version: ${{ needs.build_init.outputs.go_version }}
      -
        name: Download zip artifact
        uses: actions/download-artifact@v2
        with:
          name: wasm-zip
          path: ./contracts/tutorial/artifacts
      -
        name: Create release items
        run: |
          make build-release-checksum
      -
        name: Upload zip artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.release_url }}
          asset_path: ./contracts/tutorial/assets/provwasm_tutorial.zip
          asset_name: provwasm_tutorial.zip
          asset_content_type: application/octet-stream